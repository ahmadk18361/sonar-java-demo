package com.example;

import java.nio.file.*;
import java.io.*;

public class VulnerabilityFixer {
    public static void main(String[] args) throws IOException {
        Path path = Paths.get("src/main/java/com/example/VulnerableExample.java");
        String content = new String(Files.readAllBytes(path));

        // Replace hardcoded credentials
        content = content.replaceAll("String username = \".*?\";",
                "String username = System.getenv(\"DB_USERNAME\");");
        content = content.replaceAll("String password = \".*?\";",
                "String password = System.getenv(\"DB_PASSWORD\");");

        // Replace Statement with PreparedStatement
        content = content.replaceAll("Statement stmt = conn.createStatement\\(\\);",
                "PreparedStatement stmt = conn.prepareStatement(query);");
        content = content.replaceAll("stmt.executeQuery\\(query\\);",
                "stmt.setString(1, userInput);\n            ResultSet rs = stmt.executeQuery();");

        // Replace System.out.println with logger
        content = content.replaceAll("System.out.println\\((.*?)\\);",
                "logger.info($1);");

        // ðŸ”§ Add logger import and definition if missing
        if (!content.contains("Logger")) {
            content = "import java.util.logging.Logger;\n" + content;
            content = content.replaceFirst("\\{",
                    "{\n    private static final Logger logger = Logger.getLogger(VulnerableExample.class.getName());");
        }

        Files.write(path, content.getBytes());
        System.out.println(" Vulnerabilities remediated automatically!");
    }
}
